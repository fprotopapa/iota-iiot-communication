# syntax=docker/dockerfile:1
FROM ubuntu:20.04

WORKDIR /gateway_opcua

COPY ./rust-mqtt-service/target/release/mqtt-server .
COPY ./iota-identity-service/target/release/iota-identity-server .
COPY ./iota-streams-service/target/release/iota-streams-server .
COPY ./gateway/target/release/gateway .
COPY ./rust-sensors/opc-ua/target/release/opcua-client .
COPY ./rust-sensors/opc-ua/target/release/opcua-server .
COPY ./rust-sensors/opc-ua/opcua-config/client.conf ./opcua-config/client.conf
COPY ./rust-sensors/opc-ua/opcua-config/server.conf ./opcua-config/server.conf
COPY ./docker/gateway_opcua.sh ./start.sh
COPY ./docker/gateway-grpc_startup_opcua.toml ./config/gateway-grpc.toml
COPY ./docker/mqtt-grpc_gateway.toml ./config/mqtt-grpc.toml
COPY ./docker/ca.crt ./cert/ca.crt

RUN mkdir ./storage
RUN echo "DATABASE_URL=file:storage/database.db" > .env 

# RUN apt-get update && apt-get install -y \
#     lsof \
#     nano 

# Device
ENV DEVICE_NAME=GatewayOPCUA
ENV DEVICE_TYPE=Gateway
ENV DEVICE_ID=GatewayOPCUA_1
## MQTT
ENV MQTT_SERVER_PORT=8883
# Gateway
ENV NUM_SUBSCRIBER=1
# Log
# ENV RUST_LOG=info

RUN ["chmod", "+x", "./start.sh"]

# ENTRYPOINT ["./start.sh"]
